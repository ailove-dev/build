#!/bin/sh

refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "Usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero="0000000000000000000000000000000000000000"
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

BRANCH=`echo $1 | awk --field-separator="/" '{print $3}'`

case "$refname","$newrev_type" in
	refs/heads/*,delete)
		# delete branch
		##SUDO_PATH## -u ##GIT_USERNAME## /srv/admin/bin/update-dev.sh ##PROJECT## $BRANCH delete
		# ##SUDO_PATH## -u ##GIT_USERNAME## ssh -o StrictHostKeyChecking=no ##PROJECT##.##DEV_DOMAIN## "/srv/admin/bin/update-dev.sh ##PROJECT## $BRANCH delete"
		;;
	refs/remotes/*,delete)
		# delete tracking branch
		##SUDO_PATH## -u ##GIT_USERNAME## /srv/admin/bin/update-dev.sh ##PROJECT## $BRANCH delete
		# ##SUDO_PATH## -u ##GIT_USERNAME## ssh -o StrictHostKeyChecking=no ##PROJECT##.##DEV_DOMAIN## "/srv/admin/bin/update-dev.sh ##PROJECT## $BRANCH delete"
		;;
	*)
		# Anything else (is there anything else?)
		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
		exit 1
		;;
esac

exit 0
