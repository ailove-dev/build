<?xml version="1.0" encoding="UTF-8"?>

<project name="name-of-project" default="build">
  <property name="basedir" value="." />
  <property name="builddir" value="${basedir}/../../build/" />
  <condition property="script-suffix" value=".bat" else="">
    <os family="windows" />
  </condition>

    <target name="build"
      depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,clear-cache,phpunit,phpcb"/>

    <target name="build-parallel"
      depends="prepare,lint,tools-parallel,phpunit,phpcb"/>
    
    <target name="clear-cache" description="Clear cache">
        <exec dir="${basedir}/" executable="php" failonerror="true">
            <arg line="app/console --env=test cache:clear --no-debug" />
        </exec>
    </target>

    <target name="tools-parallel" description="Run tools in parallel">
      <parallel threadCount="2">
        <sequential>
          <antcall target="pdepend"/>
          <antcall target="phpmd-ci"/>
        </sequential>
        <antcall target="phpcpd"/>
        <antcall target="phpcs-ci"/>
        <antcall target="phploc"/>
      </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
      <delete dir="${builddir}/api"/>
      <delete dir="${builddir}/code-browser"/>
      <delete dir="${builddir}/coverage"/>
      <delete dir="${builddir}/logs"/>
      <delete dir="${builddir}/pdepend"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
      <mkdir dir="${builddir}/api"/>
      <mkdir dir="${builddir}/code-browser"/>
      <mkdir dir="${builddir}/coverage"/>
      <mkdir dir="${builddir}/logs"/>
      <mkdir dir="${builddir}/pdepend"/>
      <mkdir dir="${builddir}/phpdox"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
      <apply executable="php" failonerror="true">
        <arg value="-l" />

        <fileset dir="${basedir}/src">
          <include name="**/*.php" />
          <modified />
        </fileset>

      </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
      <exec executable="phploc${script-suffix}">
        <arg value="--log-csv" />
        <arg value="${builddir}/logs/phploc.csv" />
        <arg path="${basedir}/src" />
      </exec>
    </target>

<target name="pdepend" description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend${script-suffix}">
    <arg value="--jdepend-xml=${builddir}/logs/jdepend.xml" />
    <arg value="--jdepend-chart=${builddir}/pdepend/dependencies.svg" />
    <arg value="--overview-pyramid=${builddir}/pdepend/overview-pyramid.svg" />
    <arg path="${basedir}/src" />
  </exec>
</target>

<target name="phpmd"
  description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd${script-suffix}">
    <arg path="${basedir}/src" />
    <arg value="text" />
    <arg value="${basedir}/app/phpmd.xml" />
  </exec>
</target>

<target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd${script-suffix}">
    <arg path="${basedir}/src" />
    <arg value="xml" />
    <arg value="${basedir}/app/phpmd.xml" />
    <arg value="--reportfile" />
    <arg value="${builddir}/logs/pmd.xml" />
  </exec>
</target>

<target name="phpcs"
  description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs${script-suffix}">
    <arg value="--standard=Symfony2" />
    <arg path="${basedir}/src" />
  </exec>
</target>

<target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs${script-suffix}">
    <arg value="--report=checkstyle" />
    <arg value="--report-file=${builddir}/logs/checkstyle.xml" />
    <arg value="--standard=Symfony2" />
    <arg path="${basedir}/src" />
  </exec>
</target>

<target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd${script-suffix}">
    <arg value="--log-pmd" />
    <arg value="${builddir}/logs/pmd-cpd.xml" />
    <arg path="${basedir}/src" />
 </exec>
</target>

<target name="phpdox" description="Generate API documentation using phpDox">
  <exec executable="phpdox${script-suffix}">
    <arg value="--file=${basedir}/app/phpdox.xml" />
  </exec>
</target>

<target name="phpunit" description="Run unit tests with PHPUnit">
  <exec executable="phpunit${script-suffix}" failonerror="true">
    <arg value="-c" />
    <arg value="${basedir}/app" />
  </exec>
</target>

<target name="behat" description="Run behat tests">
    <exec dir="${basedir}/" executable="php" failonerror="true">
        <arg line="app/console -e=test behat -f junit --out ${builddir}/logs/behat" />
    </exec>
</target>

<target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb${script-suffix}">
    <arg value="--log" />
    <arg path="${builddir}/logs" />
    <arg value="--source" />
    <arg path="${basedir}/src" />
    <arg value="--output" />
    <arg path="${builddir}/code-browser" />
  </exec>
</target>

</project>
